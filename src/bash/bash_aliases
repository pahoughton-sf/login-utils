#
# Title:        bash_aliases
# Project:	Login
# Desc:
# 
#   functions and aliases
# 
# Notes:
# 
# Author:	Paul A. Houghton <paul.houghton@mci.com>
# Created:	01/15/97 08:07
#
# Revision Info: (See ChangeLog or cvs log for revision history)
#
#	$Author$
#	$Date$
#	$Name$
#	$Revision$
#	$State$
#
# $Id$
#

alias ls='ls -F'
alias xterm='xterm -n `hostname` &'
alias df='df -h'
alias pvid='mplayer -vf pp=hb/vb/dr/al/fd -fs'
alias mv='mv -i'

# type df.pl >> /dev/null 2>&1 && alias df=df.pl

[ -x /usr/sbin/ping ] && alias ping=/usr/sbin/ping
[ -x /usr/sbin/fuser ] && alias fuser=/usr/sbin/fuser
[ -x /usr/sbin/nslookup ] && alias nslookup=/usr/sbin/nslookup
[ -x /sbin/traceroute ] && alias traceroute=/usr/sbin/traceroute

[ -x $ACROREAD_BASE_DIR/bin/acroread ] &&
  alias acroread=$ACROREAD_BASE_DIR/bin/acroread

[ -d $MOZILLA_HOME ] &&
  alias netscape=$MOZILLA_HOME/netscape
  
tclmandirs="$TOOL_DIR/tcl/man /usr/local/tcl/man /Tools/tcl/man"

for dir in $tclmandirs ; do
  if [ -d $dir ] ; then
    alias tclman="man -M $dir"
    break;
  fi
done
unset tclmandirs

function show_path {
  if [ -n "$1" ] ; then
    val=$1;
  else
    val=$PATH;
  fi
  echo The path is:
  for dir in `echo $val | sed "s/ /_/g" | tr : " "`; do
    echo "    " $dir;
  done 
  unset val
}

function change_path {
  p_from=$1
  p_to=$2
  if [ -n "$p_from" -a -n "$p_to" ] ; then
    was_PATH=$PATH
    PATH=`echo $PATH | sed "s@$p_from@$p_to@"`
    is_PATH=$PATH
    echo "PATH changed"
    show_path $was_PATH
    echo "New PATH:"
    show_path $PATH
  else
    echo "usage: change_path from to"
  fi
  unset p_from
  unset p_to
  unset was_PATH
  unset is_PATH
}

function change_tooldir {
  # set -x
  # echo "ARGS: $1 $2"
  t_to=$1
  t_from=$TOOL_DIR
  if [ -n "$t_from" -a -n "$t_to" ] ; then
    TOOL_DIR=$t_to
    change_path $t_from/bin $t_to/bin
    INFOPATH=`echo $INFOPATH | sed "s@$t_from@$t_to@"`
#    MANPATH=`echo $MANPATH | sed "s@$t_from@$t_to@"`
    LD_LIBRARY_PATH=`echo $LD_LIBRARY_PATH | sed "s@$t_from@$t_to@"`
    echo 
    echo "TOOL_DIR changed from $t_from to $t_to"
    echo "  MANPATH and INFOPATH also changed."
  else
    echo "usage: change_tooldir to_dir"
  fi
  unset t_from
  unset t_to
}

function setprj {
  prj=$1
  oldprj=$PROJECT

  export PROJECT=$prj
  eval TOOL_DIR=\${${prj}_TOOL_DIR}

  # echo "New TOOL_DIR: $TOOL_DIR"
  
  if [ -n "$oldprj" ] ; then

    eval old_dir=\${${oldprj}_TOOL_DIR}
    eval new_dir=$TOOL_DIR

    # echo "Old: $old_dir"
    # echo "New: $new_dir"
    
    # echo "PATHold:"
    # show_path PATH
    tmp=`echo $PATH | sed "s@$old_dir@$new_dir@"`
    # echo "PATHnew:"
    # show_path tmp
    PATH=$tmp
    
    # echo "MANPATHold:"
    # show_path MANPATH
    tmp=`echo $MANPATH | sed "s@$old_dir@$new_dir@"`
    # echo "MANPATHnew:"
    # show_path tmp
    MANPATH=$tmp
    
    # echo "INFOPATHold:"
    # show_path INFOPATH
    tmp=`echo $INFOPATH | sed "s@$old_dir@$new_dir@"`
    # echo "INFOPATHnew:"
    # show_path tmp
    INFOPATH=$tmp
    
    # echo "LD_LIBRARY_PATHold:"
    # show_path LD_LIBRARY_PATH
    tmp=`echo $LD_LIBRARY_PATH | sed "s@$old_dir@$new_dir@"`
    # echo "LD_LIBRARY_PATHnew:"
    # show_path tmp
    LD_LIBRARY_PATH=$tmp
    
    unset tmp
    unset old_dir
    unset new_dir
  else
    PATH=$TOOL_DIR/bin:$PATH
    MANPATH=$TOOL_DIR/man:$MANPATH
    INFOPATH=$TOOL_DIR/info:$INFOPATH
    LD_LIBRARY_PATH=$TOOL_DIR/lib:$LD_LIBRARY_PATH
  fi

}

function set_title {
  case $TERM in
    dtterm) 
      echo Setting window title to \'$*\' ]0\;$*
      ;;
  esac
}

# Local Variables:
# mode:ksh
# End:
